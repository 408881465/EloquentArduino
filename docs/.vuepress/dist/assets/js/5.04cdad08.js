(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{171:function(n,e,t){"use strict";t.r(e);var i=t(0),s=Object(i.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Finite-state_machine",target:"_blank",rel:"noopener noreferrer"}},[n._v("Finite State Machines"),t("OutboundLink")],1),n._v(", in the Arduino\ncontext, are a formal rapresentation of the lifecycle of your project.\nYou define "),t("code",[n._v("states")]),n._v(" your code will be in, each with a specific task.\nThis will help you clearly isolate atomic pieces of functionality and properly organizing them,\navoiding the spaghetti code trap.")]),n._v(" "),t("p",[n._v("I was looking for a good example of FSM for Arduino, but since I couldn't find one, I'll report\nthe code of a project I'm working on. In short, I read some sensors and send them over Sigfox network.\n(only the relevant code is reported)")]),n._v(" "),n._m(0)])},[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('#define BINARY_STATES 1\n#include <eMacroFSM.h>\n\n#define STATE_WARMUP 1\n#define STATE_SENSE 2\n#define STATE_SENSE_FAIL 4\n#define STATE_SIGFOX 8\n#define STATE_SIGFOX_FAIL 16\n#define STATE_DOWN 32\n\n...\n\nvoid loop() {\n  in_state(STATE_WARMUP) {\n    staying {\n      Serial.println("warming sensors up");\n      led.turnOn();\n      mosfet.turnOn();\n      delay(WARMUP_TIME);\n      set_state(STATE_SENSE);\n    }\n  }\n\n  in_state(STATE_SENSE) {\n    staying {\n      sense.siT = siT.readValue();\n      sense.siH = siH.readValue();\n      sense.lwd = 15 - constrain(touchRead(LWD), 0, 15);\n      // @todo\n    }\n  }\n\n  in_state(STATE_SENSE_FAIL) {\n    Serial.println("Sensing failed");\n\n    staying {\n      if (sense_retries == 0) {\n        set_state(STATE_DOWN);\n      }\n      else {\n        sense_retries--;\n        mosfet.turnOff();\n        delay(5000);\n        set_state(STATE_WARMUP);\n      }\n    }\n  }\n\n  in_state(STATE_SIGFOX) {\n    staying {\n      // @todo\n    }\n  }\n\n  in_state(STATE_SIGFOX_FAIL) {\n    staying {\n      if (sigfox_retries == 0) {\n        set_state(STATE_DOWN);\n      }\n      else {\n        sigfox_retries--;\n        mosfet.turnOff();\n        delay(5000);\n        set_state(STATE_SIGFOX);\n      }\n    }\n  }\n\n  in_state(STATE_DOWN) {\n    staying {\n      Serial.println("down");\n      led.turnOff();\n      mosfet.turnOff();\n      delay(1000);\n      ESP.deepSleep(1000L * 1000 * 60 * SLEEP_MINUTES);\n    }\n  }\n}\n')])])])}],!1,null,null,null);e.default=s.exports}}]);