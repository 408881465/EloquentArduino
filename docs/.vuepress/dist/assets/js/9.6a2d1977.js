(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{175:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("You have several levels of severity for your debugs, following the PSR-3 Logger Interface\nyou can find at "),s("a",{attrs:{href:"https://www.php-fig.org/psr/psr-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.php-fig.org/psr/psr-3/"),s("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("For each severity, you get 3 methods:")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("A few examples:")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"serial-logging"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serial-logging","aria-hidden":"true"}},[this._v("#")]),this._v(" Serial logging")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Serial debug is the most used method to test if our code is behaving as expected. It is not\nunusual to intermingle our code with lots of "),e("code",[this._v("Serial.print")]),this._v(" statements to record what\nexecution path the code is running or what the value of a variable is.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This works fine for testing purposes, but when you're code is working fine you may need\nto remove all those prints to remove clutter. "),e("code",[this._v("SerialLogging")]),this._v(' defines a few helper methods\nto print messages to the console with different levels of severity so you can select\nonly a subset of your logs to keep "in production" or silent them altogether with a\nsigle command. It even provides a construct to debug the value of a variable.')])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"import"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#import","aria-hidden":"true"}},[this._v("#")]),this._v(" Import")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v('#include "eSerialLog.h"')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"how-to-use"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use","aria-hidden":"true"}},[this._v("#")]),this._v(" How to use")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("emergency")]),t._v(" "),s("li",[t._v("alert")]),t._v(" "),s("li",[t._v("critical")]),t._v(" "),s("li",[t._v("error")]),t._v(" "),s("li",[t._v("warning")]),t._v(" "),s("li",[t._v("notice")]),t._v(" "),s("li",[t._v("info")]),t._v(" "),s("li",[t._v("debug")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("code",[t._v("log_$severity(msg)")]),t._v(" will always log the given message")]),t._v(" "),s("li",[s("code",[t._v("log_$severity_if(condition, message)")]),t._v(" will log the message only if condition is true")]),t._v(" "),s("li",[s("code",[t._v("log_$severity_unless(condition, message)")]),t._v(" will log the message only if condition is false")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_emergency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This emergency message will always be logged"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_error_if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Serial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This will be logged only if Serial is not available"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_info_unless")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Serial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Also this will be logged only if Serial is not available"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can then control what messages get actually displayed with the constant "),e("code",[this._v("LOG_SEVERITY")]),this._v(",\nwhich defaults to "),e("code",[this._v("LOG_SEVERITY_DEBUG")]),this._v(" (meaning all messages are displayed):")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LOG_SEVERITY LOG_SEVERITY_ERROR")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_emergency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This will be displayed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This also will be displayed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_warning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This will not be displayed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can define "),e("code",[this._v("LOG_SEVERITY_SILENT")]),this._v(" to completely silent the logging.")])}],!1,null,null,null);e.default=a.exports}}]);