(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{180:function(e,t,n){"use strict";n.r(t);var o=n(0),r=Object(o.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p",[e._v("In the last weeks Tensorflow Lite for microcontrollers has gained\nquite some momentum, thanks to its promise of delivering sophisticated\nAI to tiny computers. I'm astonished too, of course: I would have never\ntought it could be possible to run "),n("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/tree/ac960b6b5a3b8a4cd69d59e63914a971e9bac8e2/tensorflow/lite/experimental/micro/examples/person_detection",target:"_blank",rel:"noopener noreferrer"}},[e._v("person detection"),n("OutboundLink")],1),e._v("\nin a 256 Kb microcontroller!")]),e._v(" "),n("p",[e._v("Still, I'm not a big fan of neural networks in general: I never used them for\nanything \"serious\", so I didn't took the time to learn all the ins and outs.\nWhen I had to use them, I just added a bunch of hidden layers randomly and hoped\nfor the best: sometimes it worked, sometimes not.\nThey just don't caught me up, though I know they can do all sort of magic!")]),e._v(" "),e._m(0),e._v(" "),n("p",[e._v("Anyway, when I read about NN on microcontrollers for the first time (August 2019),\nI listed all the algorithms I knew - not many - searching for alternatives to NN.\nThis is the list of what I know (and used during my CS degree):")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("Then I started searching the internet for attempts to bring SVMs to microcontrollers:\nI only found the "),n("a",{attrs:{href:"https://github.com/nok/sklearn-porter",target:"_blank",rel:"noopener noreferrer"}},[e._v("sklearn-porter"),n("OutboundLink")],1),e._v(" project,\nthat actually does much more than SVM in C.\nSo I tried fitting the Iris dataset to a linear SVC in scikit-learn and run the porter;\nit was a success: the sketch occupied 4642 bytes (15%) of program space and\n860 bytes (41%) of memory of an Arduino Nano (old generation) and\nthe classifier predicted 20 test samples at 100% accuracy. Problem solved!")]),e._v(" "),n("p",[e._v("Well, not exactly: I tried with another sample dataset (breast cancer) and I hit a wall.\nThe sketch occupied 9964 bytes (32%) of program space and 7268 bytes (354%) of memory.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The only thing I know for sure is they're not the most efficient algorithm\nin the machine learning world: space and time can grow quite fast adding\nmore and more layers.\nThis is why I was surprised to read about the Tensorflow effort to bring\nneural networks to microcontrollers: the first thing I thought was \""),t("em",[this._v("WHY?")]),this._v('".\nThere are much more efficient (in both terms of space and time) algorithms\nto perform machine learning, so why whould I opt for NN? Following their blog,\nit still remains a mystery for me.')])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("KNN")]),e._v(" "),n("li",[e._v("decision tree")]),e._v(" "),n("li",[e._v("random forest")]),e._v(" "),n("li",[e._v("SVM")]),e._v(" "),n("li",[e._v("naive bayes")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Apart from decision tree, which is probably the simplest and fastest option if\nthe data is well separable, I selected "),t("strong",[this._v("SVM")]),this._v(" as a good candidate, because\nof it's non-linearity, high dimensionality and support vectors encoding\nwhich seemed to be quite space efficient from my own point of view.")])}],!1,null,null,null);t.default=r.exports}}]);